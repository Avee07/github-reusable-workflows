name: Mock Change Request Workflow

on:
  workflow_call:
    inputs:
      site:
        required: false
        type: string
      subnet_info:
        required: false
        type: string
      state:
        required: true
        type: string
      close_code:
        required: false
        type: string
    secrets:
      token:
        required: true

jobs:
  mock-change-request:
    runs-on: ubuntu-latest
    env:
      SITE: ${{ inputs.site }}
      SUBNET_INFO: ${{ inputs.subnet_info }}
      STATE: ${{ inputs.state }}
      CLOSE_CODE: ${{ inputs.close_code }}

    steps:
      - name: Checkout Main Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.token }}

      - name: Setup Python and System Dependencies
        run: |
          echo "Installing system dependencies..."
          if command -v apt-get &>/dev/null; then
            sudo apt-get update
            sudo apt-get install -y jq python3-pip
          elif command -v yum &>/dev/null; then
            sudo yum install -y epel-release
            sudo yum install -y jq python3-pip
          else
            echo "Unknown package manager" && exit 1
          fi

          echo "Upgrading pip and installing Python requirements..."
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt

      - name: Prepare Inputs (Create)
        if: ${{ inputs.state == 'create' }}
        run: |
          echo "Preparing inventories for site: $SITE"
          export ANSIBLE_INVENTORY="/mock-data/common/inventory,/mock-data/$SITE/inventory"
          echo -e "host1\nhost2" > hostlist.txt
          echo "CI Name" > hosts.csv
          cat hostlist.txt >> hosts.csv
          sed 's/$/,/' hosts.csv > mock_host_list.csv

      - name: Download CR Artifacts (Implement/Close)
        if: ${{ inputs.state != 'create' }}
        uses: actions/download-artifact@v4
        with:
          name: cr-create-${{ inputs.site }}

      - name: Run Change Request Logic
        run: |
          case "$STATE" in
            create)
              python3 ./mock_utils/mock_handle_cr.py --state create
              ;;
            implement)
              python3 ./mock_utils/mock_handle_cr.py --state implement
              ;;
            close)
              python3 ./mock_utils/mock_handle_cr.py --state close --close_code "$CLOSE_CODE"
              ;;
            *)
              echo "Invalid state: $STATE" && exit 1
              ;;
          esac

      - name: Set Environment Variables
        run: |
          echo "MOCK_ANSIBLE_FORCE_COLOR=0" >> $GITHUB_ENV
          echo "MOCK_ANSIBLE_INVENTORY=/mock-data/common/inventory" >> $GITHUB_ENV
          echo "MOCK_HOST_ENDPOINT=mock-host-endpoint" >> $GITHUB_ENV
          echo "MOCK_ACCESS_KEY=mock-access-key" >> $GITHUB_ENV
          echo "MOCK_SECRET_KEY=mock-secret-key" >> $GITHUB_ENV

      - name: Determine Cloud and Export
        run: |
          if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
            cloud="mock-cloud-rcdn-1-cephs3"
          else
            cloud="mock-cloud-svldev-1-cephs3"
          fi
          echo "Mock cloud: $cloud"
          echo "MOCK_CLOUD=$cloud" >> $GITHUB_ENV

      - name: List Generated Files
        run: |
            echo "Generated Files:"
            if [[ -f mock_host_list.csv ]]; then
              echo "--- mock_host_list.csv ---"
              cat mock_host_list.csv
            else
              echo "mock_host_list.csv not found"
            fi
        
            if [[ -f mock_CHANGE_NUMBER.txt ]]; then
              echo "--- mock_CHANGE_NUMBER.txt ---"
              cat mock_CHANGE_NUMBER.txt
            else
              echo "mock_CHANGE_NUMBER.txt not found"
            fi
        

      - name: Upload CR Artifacts (Create)
        if: ${{ inputs.state == 'create' }}
        uses: actions/upload-artifact@v4
        with:
          name: cr-create-${{ inputs.site }}
          path: |
            mock_host_list.csv
            mock_CHANGE_NUMBER.txt
          if-no-files-found: ignore
